/*
Given two strings a and b consisting of lowercase characters. The task is to check whether two given strings are an anagram of each other or not. An anagram of a string is another string that contains the same characters, only the order of characters can be different. For example, “act” and “tac” are an anagram of each other.

Example 1:

Input:
a = geeksforgeeks, b = forgeeksgeeks
Output: YES
Explanation: Both the string have same
characters with same frequency. So, 
both are anagrams.
Example 2:

Input:
a = allergy, b = allergic
Output: NO
Explanation:Characters in both the strings
are not same, so they are not anagrams.
Your Task:
The task is to complete the function isAnagram() which checks if the two strings are an anagram of each other. The function returns true if the strings are anagram else it returns false.

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(Number of distinct characters).
*/

#include <bits/stdc++.h>
using namespace std;

/*  Function to check if two strings are anagram
*   c, d: input string
*/
bool isAnagram(string c, string d){
    
    int l1 = c.length();
    int l2 = d.length();
    
    if(l1!=l2) 
        return false;
    
    sort(c.begin(),c.end());
    sort(d.begin(),d.end());
    
    if(c==d) {
        return true;
    } else {
        false;
    }
}

int main() {
    int t;
    cin >> t;
    while(t--){
        string c, d;
        cin >> c >> d;
        if(isAnagram(c, d)) cout << "YES" << endl;
        else cout << "NO" << endl;
    }
}
